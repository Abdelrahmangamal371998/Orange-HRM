name: Security and Build Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Static Code Analysis
      - name: Run Dependency-Check
        run: |
          $HOME/dependency-check/bin/dependency-check.sh --project "MyProject" --scan . --out . --format HTML

      # Run Snyk Security Test (Updated version)
      - name: Run Snyk Security Test
        uses: snyk/actions/security-check@v3
        with:
          snyk_token: ${{ secrets.SNYK_TOKEN }}

      # Run Code Quality and Security Linting
      - name: Run SpotBugs (Java)
        run: mvn spotbugs:check

      - name: Run ESLint (JavaScript)
        run: npx eslint .

      # Secrets Scanning
      - name: Scan for Secrets using TruffleHog
        run: |
          pip install truffleHog
          truffleHog --regex --since_commit HEAD

      # Dynamic Application Security Testing (DAST)
      - name: Run OWASP ZAP scan
        uses: zaproxy/action-full-scan@v0.1.0
        with:
          target: 'http://your-app-url'

      # Container Security
      - name: Scan Docker Image with Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          trivy image --no-progress my-docker-image:latest

      # API Security Testing
      - name: Run Postman Security Test
        run: |
          # Run Postman tests against your API (replace with your collection URL)
          newman run https://www.getpostman.com/collections/your-collection-id

      # Build and test your application
      - name: Build and Test
        run: |
          # Insert your build and test commands here
          npm install
          npm run build
          npm test

      # If you're using Docker
      - name: Build Docker Image
        run: |
          docker build -t my-docker-image .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to production
        run: |
          # Insert your deployment commands here
          kubectl apply -f deployment.yaml
